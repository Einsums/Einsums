
.. _program_listing_file_src_include_einsums_utility_SmartPointerTraits.hpp:

Program Listing for File SmartPointerTraits.hpp
===============================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_include_einsums_utility_SmartPointerTraits.hpp>` (``src/include/einsums/utility/SmartPointerTraits.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <memory>
   #include <type_traits>
   
   namespace einsums {
   
   namespace details {
   template <typename T>
   struct IsSmartPointerHelper : public std::false_type {};
   
   template <typename T>
   struct IsSmartPointerHelper<std::shared_ptr<T>> : public std::true_type {};
   
   template <typename T>
   struct IsSmartPointerHelper<std::unique_ptr<T>> : public std::true_type {};
   
   template <typename T>
   struct IsSmartPointerHelper<std::weak_ptr<T>> : public std::true_type {};
   } // namespace details
   
   template <typename T>
   struct IsSmartPointerHelper : public details::IsSmartPointerHelper<typename std::remove_cv<T>::type> {};
   
   template <typename T>
   inline constexpr bool IsSmartPointerV = IsSmartPointerHelper<T>::value;
   
   template <typename T>
   concept SmartPointer = IsSmartPointerV<T>;
   
   template <typename T>
   concept NotASmartPointer = !
   IsSmartPointerV<T>;
   
   } // namespace einsums
