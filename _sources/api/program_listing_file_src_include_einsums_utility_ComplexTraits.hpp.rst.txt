
.. _program_listing_file_src_include_einsums_utility_ComplexTraits.hpp:

Program Listing for File ComplexTraits.hpp
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_include_einsums_utility_ComplexTraits.hpp>` (``src/include/einsums/utility/ComplexTraits.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <complex>
   #include <type_traits>
   
   namespace einsums {
   
   template <typename>
   inline constexpr bool IsComplexV = false;
   
   template <typename type>
   inline constexpr bool IsComplexV<std::complex<type>> =
       std::disjunction_v<std::is_same<type, float>, std::is_same<type, double>, std::is_same<type, long double>>;
   
   template <typename type>
   struct IsComplex : std::bool_constant<IsComplexV<type>> {};
   
   template <typename type>
   concept Complex = IsComplexV<type>;
   
   template <typename T>
   struct ComplexType {
       using Type = T;
   };
   
   template <typename T>
   struct ComplexType<std::complex<T>> {
       using Type = T;
   };
   
   template <typename T>
   using RemoveComplexT = typename ComplexType<T>::Type;
   
   template <typename T>
   struct AddComplex {
       using Type = std::complex<T>;
   };
   
   template <typename T>
   struct AddComplex<std::complex<T>> {
       using Type = std::complex<T>;
   };
   
   template <typename T>
   using AddComplexT = typename AddComplex<T>::Type;
   
   } // namespace einsums
