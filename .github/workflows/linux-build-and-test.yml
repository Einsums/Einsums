name: Linux build and test workflow
on:
  workflow_call:
    inputs:
      build_ref:
        type: string
        required: false
      build_cache_suffix:
        type: string
        required: false
        default: "default"
      build_cache_size:
        type: string
        required: false
        default: 2G
      build_configure_extra_args:
        type: string
        required: false

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        compiler: [ gcc, intel ]
        blas: [ openblas, mkl ]
        build_type: [ Debug, RelWithDebInfo ]
        include:
          - cmake_extra: ""
          - compiler: intel
            cmake_extra: >
              -DCMAKE_CXX_COMPILER=icpx
              -DMKL_INTERFACE=lp64
              -DCMAKE_CXX_FLAGS="--gcc-toolchain=${CONDA_PREFIX} --sysroot=${CONDA_PREFIX}/${HOST}/sysroot -target ${HOST}"
              -DOpenMP_CXX_INCLUDE_DIR="${CONDA_PREFIX}/include"
            # OpenMP search dir needed b/c setting CMAKE_CXX_FLAGS overrides conda's CXXFLAGS that passes same dir as -isystem
        exclude:
          - compiler: intel
            blas: openblas

    name: "${{ matrix.compiler }} • ${{ matrix.blas }} • ${{ matrix.build_type }}"
    runs-on: ubuntu-latest
    env:
      CCACHE_DIR: $GITHUB_WORKSPACE/build_cache_${{ inputs.build_cache_suffix }}
      CCACHE_MAXSIZE: ${{ inputs.build_cache_size }}
    defaults:
      run:
        shell: bash -el {0}
    steps:

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.build_ref }}
          path: src

      - name: Cache Build Cache
        uses: actions/cache@v4
        with:
          path: build_cache_${{ inputs.build_cache_suffix }}
          key: einsums-${{ runner.os }}-${{ inputs.build_cache_suffix }}-${{ matrix.compiler }}-${{ matrix.blas }}-hptt-${{ matrix.hptt }}-${{ github.sha }}
          restore-keys: einsums-${{ runner.os }}-${{ inputs.build_cache_suffix }}-${{ matrix.compiler }}-${{ matrix.blas }}-hptt-${{ matrix.hptt }}-

      # From https://github.com/conda-incubator/setup-miniconda?tab=readme-ov-file#caching-environments
      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          activate-environment: einsums-env

      - name: Install ruamel.yaml
        run: |
          conda install -c conda-forge ruamel.yaml

      - name: Merge Conda YAML files
        working-directory: ${{ github.workspace }}/devtools/conda-envs
        run: |
          python merge_yaml.py ${{ matrix.compiler }} ${{ matrix.blas }}

      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Conda env
        uses: actions/cache@v4
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{ runner.os }}-${{ runner.arch }}-${{ steps.get-date.outputs.today }}-${{ hashFiles('devtools/conda-envs/conda.yml') }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: |
          conda env update -n einsums-env -f devtools/conda-env/conda.yml
          conda activate einsums-env
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Conda Environment
        run: |
          conda info
          conda list

      - name: Configure CMake
        run: |
          cmake \
            -G Ninja \
            -S "$GITHUB_WORKSPACE/src" \
            -B "$GITHUB_WORKSPACE/build" \
            -D EINSUMS_BUILD_PYTHON=OFF \
            -D EINSUMS_COVERAGE=ON \
            -D CMAKE_C_COMPILER_LAUNCHER=ccache \
            -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -D CMAKE_BUILD_TYPE=$${{ matrix.build_type }} \
            -D EINSUMS_SHOW_WARNING=OFF \
            -D CMAKE_INSTALL_PREFIX="${{ github.workspace }}/installed" \
            -D CMAKE_PREFIX_PATH="${CONDA_PREFIX}" \
            ${{ matrix.cmake_extra }}

      - name: Build and Install
        run: |
          cmake --build "${{ github.workspace }}/build" --config Release --target install

      - name: Test (CTest) - Unit Tests
        working-directory: "${{ github.workspace }}/build"
        run: ctest --rerun-failed --output-on-failure
