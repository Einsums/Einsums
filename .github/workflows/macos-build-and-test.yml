name: macOS build and test workflow
on:
  workflow_call:
    inputs:
      build_ref:
        type: string
        required: false
      build_cache_suffix:
        type: string
        required: false
        default: "default"
      build_cache_size:
        type: string
        required: false
        default: 2G
      build_configure_extra_args:
        type: string
        required: false

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        hptt: [ ON, OFF ]

    name: "HPTT=${{ matrix.hptt }}"
    runs-on: macos-latest
    env:
      CCACHE_DIR: $GITHUB_WORKSPACE/build_cache_${{ inputs.build_cache_suffix }}
      CCACHE_MAXSIZE: ${{ inputs.build_cache_size }}
    defaults:
      run:
        shell: bash -el {0}
    steps:

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.build_ref }}
          path: src

      - uses: actions/cache/restore@v4
        with:
          path: build_cache_${{ inputs.build_cache_suffix }}
          key: einsums-${{ runner.os }}-${{ inputs.build_cache_suffix }}-${{ github.sha }}
          restore-keys: einsums-${{ runner.os }}-${{ inputs.build_cache_suffix }}-

      - name: Install Dependencies
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: einsums-dev
          environment-file: src/devtools/conda-envs/macos.yml

      - name: Conda Environment
        run: |
          conda info
          conda list

      - name: Configure CMake
        run: |
          cmake \
            -S "$GITHUB_WORKSPACE/src" \
            -B "$GITHUB_WORKSPACE/build" \
            -D CMAKE_C_COMPILER_LAUNCHER=ccache \
            -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -D CMAKE_BUILD_TYPE=Release \
            -D EINSUMS_SHOW_WARNING=OFF \
            -D EINSUMS_USE_HPTT=${{ matrix.hptt }} \
            -D EINSUMS_STATIC_BUILD=${{ matrix.hptt }} \
            -D CMAKE_INSTALL_PREFIX="${{ github.workspace }}/installed" \
            -D CMAKE_PREFIX_PATH="${CONDA_PREFIX}"

      - name: Build and Install
        run: |
          cmake --build "${{ github.workspace }}/build" --config Release --target install

      - name: Test (CTest) - Unit Tests
        working-directory: "${{ github.workspace }}/build"
        run: ctest --rerun-failed --output-on-failure

      - name: Test (find_package) - consume installation
        shell: bash -l {0}
        run: |
          mkdir test_installed_library && cd test_installed_library
          cat > CMakeLists.txt <<EOF
          cmake_minimum_required(VERSION 3.8)
          project(sample)
          find_package(Einsums REQUIRED)
          include(CMakePrintHelpers)
          cmake_print_properties(
            TARGETS
              Einsums::einsums
              HDF5::HDF5
              tgt::lapack
              OpenMP::OpenMP_CXX
            PROPERTIES
              IMPORTED_LINK_DEPENDENT_LIBRARIES
              INTERFACE_LOCATION
              INTERFACE_LINK_LIBRARIES
              INTERFACE_INCLUDE_DIRECTORIES
              INTERFACE_COMPILE_DEFINITIONS
              INTERFACE_COMPILE_OPTIONS
              INTERFACE_SYSTEM_INCLUDE_DIRECTORIES
            )
          add_executable(timings "../src/timing/main.cpp")
          target_link_libraries(timings Einsums::einsums)
          EOF
          cmake -S . \
            -B build \
            -G Ninja \
            --log-level verbose \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="${CONDA_PREFIX};${CONDA_PREFIX}/Library;${{ github.workspace }}/installed"
          cmake --build build
          ./build/timings

      - uses: actions/cache/save@v4
        if: matrix.hptt == ON
        with:
          path: build_cache_${{ inputs.build_cache_suffix }}
          key: einsums-${{ runner.os }}-${{ inputs.build_cache_suffix }}-${{ github.sha }}
