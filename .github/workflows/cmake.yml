name: CMake

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        cxx: [ L-Gnu, M-Clang, L-Intel ]
        build_type: [ Release, Debug ]
        hptt: [ ON, OFF ]
        include:
          - cmargs: ""
          - cxx: L-Gnu
            os: ubuntu-latest
          - cxx: M-Clang
            os: macos-latest
          - cxx: L-Intel
            os: ubuntu-latest
            cmargs: >
              -DCMAKE_CXX_COMPILER=icpx
              -DCMAKE_CXX_FLAGS="--gcc-toolchain=${CONDA_PREFIX} --sysroot=${CONDA_PREFIX}/${HOST}/sysroot -target ${HOST}"
          - cxx: L-src
            os: ubuntu-latest
            build_type: Debug
            hptt: ON
            cmargs: >
              -DFETCHCONTENT_QUIET=OFF
              -DFETCHCONTENT_TRY_FIND_PACKAGE_MODE=NEVER
        exclude:
          - cxx: L-Intel
            build_type: Debug
    name: "Build • ${{ matrix.cxx }} • ${{ matrix.build_type }} • HPTT=${{ matrix.hptt }}"
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3

      - name: Write a Conda Env File
        run: |
          cat > export.yaml <<EOF
          name: einsums-dev
          channels:
            - conda-forge
            - nodefaults
          dependencies:
            - cmake
            - ninja
            - cxx-compiler
            - catch2
            - fftw
            - fmt
            - range-v3
            - blas-devel
            #MKL- libblas=*=*mkl
            #ACC- libblas=*=*accelerate
            #OBL- libblas=*=*openblas
            #OBL- openblas=*=*openmp*
            - liblapacke
            - hdf5
            - zlib
            - elfutils
            #- dpcpp_linux-64
          EOF
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            if [[ "${{ matrix.build_type }}" == "Release" ]]; then
              sed -i "s;#MKL;;g" export.yaml
            else
              sed -i "s;#OBL;;g" export.yaml
            fi
            if [[ "${{ matrix.cxx }}" == "L-Intel" ]]; then
              sed -i "s/#- dpcpp_linux-64/- dpcpp_linux-64/g" export.yaml
            fi
          fi
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            sed -E -i.bak "s;#OBL;;g" export.yaml
            sed -E -i.bak "s;- elfutils;;g" export.yaml
          fi
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            :
          fi
          # for empty bash block
          #   :
          # model sed for L/W
          #   sed -i "s;;;g" export.yaml
          # model sed for M
          #   sed -E -i.bak "s;;;g" export.yaml
          cat export.yaml

      - name: Install dependencies
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: einsums-dev
          #environment-file: devtools/conda-envs/${{matrix.environment}}
          environment-file: export.yaml
          miniforge-variant: Mambaforge
          use-mamba: true
          channels: conda-forge

      # Step is unnecessary; remove step for debugging.
      - name: Confound Environment - test fetched cblas/lapacke
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.build_type == 'Debug' && matrix.hptt == 'OFF' }}
        run: |
          conda remove liblapacke libcblas --solver=libmamba

      # Step is unnecessary; remove step for debugging.
      - name: Confound Environment - test fetched everything
        if: matrix.cxx == 'L-src'
        run: |
          conda remove catch2 fmt range-v3 liblapacke libcblas --solver=libmamba

      - name: Conda environment
        run: |
          mamba info
          mamba list

      - name: Configure CMake
        run: |
          cmake \
            -S . \
            -B ${{github.workspace}}/build \
            -G Ninja \
            -D CMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -D EINSUMS_SHOW_WARNING=OFF \
            -D EINSUMS_USE_HPTT=${{matrix.hptt}} \
            -D EINSUMS_STATIC_BUILD=${{matrix.hptt}} \
            -D CMAKE_INSTALL_PREFIX="${{github.workspace}}/installed" \
            -DCMAKE_PREFIX_PATH="${CONDA_PREFIX}" \
            ${{ matrix.cmargs }}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

      - name: Test (CTest)
        working-directory: ${{github.workspace}}/build
        run: ctest

      - name: Test (Catch2)
        if: false
        working-directory: ${{github.workspace}}/build/tests
        run: ./test-all
